name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Install server dependencies
        run: cd server && npm ci

      - name: Run ESLint (Client)
        run: cd client && npm run lint

      - name: Run ESLint (Server)
        run: cd server && npm run lint

      - name: Run tests (Client)
        run: cd client && npm test -- --coverage --watchAll=false

      - name: Run tests (Server)
        run: cd server && npm test -- --coverage

      - name: Upload Client Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./client/coverage/lcov.info
          flags: client
          name: client-coverage

      - name: Upload Server Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./server/coverage/lcov.info
          flags: server
          name: server-coverage

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm run install:all

      - name: Build client
        run: npm run build:client

      - name: Build server
        run: npm run build:server

      - name: Upload client build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-build
          path: client/dist/

      - name: Upload server build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: server-build
          path: server/dist/

  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit (Root)
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run npm audit (Client)
        run: cd client && npm audit --audit-level=high
        continue-on-error: true

      - name: Run npm audit (Server)
        run: cd server && npm audit --audit-level=high
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
