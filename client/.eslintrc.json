{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react", "react-hooks"],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "prefer-const": "error",
    "no-var": "error",
    "prefer-arrow-callback": "error",
    "arrow-body-style": ["warn", "as-needed"],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/prefer-function-type": "error",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",

    // Component Size & Complexity Rules (Relaxed for existing codebase)
    "max-lines": [
      "warn",
      { "max": 250, "skipBlankLines": true, "skipComments": true }
    ],
    "max-lines-per-function": [
      "warn",
      { "max": 100, "skipBlankLines": true, "skipComments": true }
    ],
    "complexity": ["warn", 15],
    "max-params": ["warn", { "max": 6 }],
    "max-depth": ["warn", { "max": 5 }],
    "max-nested-callbacks": ["warn", { "max": 4 }],

    // Relax some strict TypeScript rules for existing code
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      { "allowExpressions": true, "allowTypedFunctionExpressions": true }
    ],
    "react/no-unescaped-entities": "warn"
  }
}
